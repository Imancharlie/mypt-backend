# Generated by Django 4.2.7 on 2025-07-28 07:51

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="WeeklyReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "week_number",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(52),
                        ]
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("summary", models.TextField(help_text="Weekly summary of activities")),
                ("main_job_title", models.CharField(max_length=200)),
                ("main_job_description", models.TextField()),
                ("objectives_met", models.TextField(blank=True)),
                ("learning_outcomes", models.TextField(blank=True)),
                ("supervisor_comments", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("SUBMITTED", "Submitted"),
                            ("APPROVED", "Approved"),
                            ("REJECTED", "Rejected"),
                        ],
                        default="DRAFT",
                        max_length=10,
                    ),
                ),
                (
                    "total_hours",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                ("is_ai_enhanced", models.BooleanField(default=False)),
                ("submitted_at", models.DateTimeField(blank=True, null=True)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="weekly_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Weekly Report",
                "verbose_name_plural": "Weekly Reports",
                "db_table": "weekly_reports",
                "ordering": ["-week_number"],
                "unique_together": {("student", "week_number")},
            },
        ),
        migrations.CreateModel(
            name="GeneralReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        default="Industrial Practical Training Report", max_length=300
                    ),
                ),
                (
                    "introduction",
                    models.TextField(help_text="Introduction to the training program"),
                ),
                (
                    "company_overview",
                    models.TextField(help_text="Overview of the host company"),
                ),
                (
                    "training_objectives",
                    models.TextField(help_text="Objectives of the practical training"),
                ),
                (
                    "methodology",
                    models.TextField(
                        blank=True, help_text="Training methodology and approach"
                    ),
                ),
                (
                    "achievements",
                    models.TextField(help_text="Key achievements during training"),
                ),
                (
                    "challenges_faced",
                    models.TextField(help_text="Challenges encountered and solutions"),
                ),
                (
                    "skills_acquired",
                    models.TextField(help_text="Technical and soft skills gained"),
                ),
                (
                    "recommendations",
                    models.TextField(
                        help_text="Recommendations for future improvements"
                    ),
                ),
                (
                    "conclusion",
                    models.TextField(help_text="Training conclusion and reflection"),
                ),
                ("acknowledgments", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("COMPLETED", "Completed"),
                            ("SUBMITTED", "Submitted"),
                            ("APPROVED", "Approved"),
                        ],
                        default="DRAFT",
                        max_length=10,
                    ),
                ),
                ("is_ai_enhanced", models.BooleanField(default=False)),
                ("word_count", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("submitted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "compiled_from",
                    models.ManyToManyField(
                        blank=True,
                        related_name="general_reports",
                        to="reports.weeklyreport",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="general_report",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "General Report",
                "verbose_name_plural": "General Reports",
                "db_table": "general_reports",
            },
        ),
        migrations.CreateModel(
            name="AIEnhancementLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_type",
                    models.CharField(
                        choices=[
                            ("DAILY", "Daily Report"),
                            ("WEEKLY", "Weekly Report"),
                            ("GENERAL", "General Report"),
                        ],
                        max_length=10,
                    ),
                ),
                ("original_text", models.TextField()),
                ("enhanced_text", models.TextField()),
                ("prompt_used", models.TextField()),
                ("tokens_consumed", models.IntegerField(default=0)),
                ("enhancement_type", models.CharField(max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ai_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "ai_enhancement_logs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MainJobOperation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "step_number",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                ("operation_name", models.CharField(max_length=200)),
                ("operation_description", models.TextField()),
                ("tools_used", models.TextField(help_text="Tools and equipment used")),
                (
                    "time_spent",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=4,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("safety_measures", models.TextField(blank=True)),
                ("outcome", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "weekly_report",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="operations",
                        to="reports.weeklyreport",
                    ),
                ),
            ],
            options={
                "verbose_name": "Main Job Operation",
                "verbose_name_plural": "Main Job Operations",
                "db_table": "main_job_operations",
                "ordering": ["step_number"],
                "unique_together": {("weekly_report", "step_number")},
            },
        ),
        migrations.CreateModel(
            name="DailyReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                (
                    "description",
                    models.TextField(
                        help_text="Detailed description of daily activities"
                    ),
                ),
                (
                    "hours_spent",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=4,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(24),
                        ],
                    ),
                ),
                (
                    "week_number",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(52),
                        ]
                    ),
                ),
                (
                    "skills_learned",
                    models.TextField(
                        blank=True, help_text="New skills or knowledge acquired"
                    ),
                ),
                ("challenges_faced", models.TextField(blank=True)),
                ("supervisor_feedback", models.TextField(blank=True)),
                ("is_submitted", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="daily_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "weekly_report",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="daily_reports",
                        to="reports.weeklyreport",
                    ),
                ),
            ],
            options={
                "verbose_name": "Daily Report",
                "verbose_name_plural": "Daily Reports",
                "db_table": "daily_reports",
                "ordering": ["-date"],
                "unique_together": {("student", "date")},
            },
        ),
    ]
